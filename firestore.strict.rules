rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Prevent client writes to events collections; server (Admin SDK) bypasses rules
    match /{col}/{doc}/events/{eventId} {
      allow read: if request.auth != null && request.auth.token.email_verified == true;
      allow write: if false;
    }

    // submissions collection: allow server writes only (clients cannot write)
    match /submissions/{docId} {
      allow read: if request.auth != null && request.auth.token.email_verified == true;
      allow write: if false;
    }

    // imagedesign-events: allow authenticated clients to create minimal docs with imageUrl only
    match /kpact-gamebus-imagedesign-events/{docId} {
      allow create: if request.auth != null
        && request.resource.data.keys().hasOnly(['imageUrl','createdAt','chassis'])
        && request.resource.data.imageUrl is string;
      allow update, delete: if false;
      allow read: if request.auth != null;
    }

    // beforecitychange specific safety: deny client writes to beforecitychange_events
    match /beforecitychange_events/{doc}/events/{eid} {
      allow write: if false;
      allow read: if request.auth != null && request.auth.token.email_verified == true;
    }

    // Default: deny writes from clients
    match /{document=**} {
      allow write: if false;
      allow read: if request.auth != null && request.auth.token.email_verified == true;
    }
  }
}
