/* MN1 mock overrides (scoped to tablet-mock-env) */
.minigame-mn1-page .figma-style1-content {
  overflow: visible !important;
  height: 100% !important;
  max-height: 100% !important;
}

/* All overrides scoped to the tablet mock environment to avoid changing mobile layout */
.tablet-mock-env .figma-style1-main {
  align-items: start !important;
  overflow: visible !important;
}

.tablet-mock-env .figma-style1-content-area {
  overflow: auto !important;
  -webkit-overflow-scrolling: touch !important;
  max-height: 100% !important;
  box-sizing: border-box !important;
  padding-bottom: calc(env(safe-area-inset-bottom, 0px) + 20px) !important;
}

/* Keep primary action accessible: pin to bottom inside mockup without affecting other pages */
.tablet-mock-env .figma-style1-button-container {
  position: sticky !important;
  bottom: calc(env(safe-area-inset-bottom, 0px) + 12px) !important;
  display: flex !important;
  justify-content: center !important;
  z-index: 10010 !important;
}

/* Make sure background image doesn't cover interactive content in the mockup */
.tablet-mock-env .figma-style1-background-image {
  object-position: center top !important;
}

/* Force safe scaling of inner viewport elements */
.tablet-mock-env .tablet-mock-env,
.tablet-mock-env .figma-style1-container {
  width: 100% !important;
  height: auto !important;
  min-height: 100% !important;
}

/* Show MN3 background in mock to match mobile (positioned inside page container to avoid covering mock frame) */
.tablet-mock-env .mn3-page-bg::before,
.tablet-mock-env .mn3-allocation-bg::before {
  display: block !important;
  content: "" !important;
  position: absolute !important; /* absolute relative to .mn3-page-bg (which is position: relative) */
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  background-size: cover !important;
  background-position: center top !important;
  background-repeat: no-repeat !important;
  z-index: 0 !important; /* ensure children with z-index > 0 sit above */
  pointer-events: none !important;
}

/* Hide Figma layout decorative overlays for MN1 result step inside mock */
.tablet-mock-env .figma-style1-background-overlay,
.tablet-mock-env .figma-style1-wave-overlay,
.tablet-mock-env .figma-style1-background-image {
  display: none !important;
  background-image: none !important;
}

/* Ensure MN1 button grid wraps inside mockup iframe and doesn't overflow */
.tablet-mock-env .mn3-button-grid {
  max-width: 92% !important;
  padding-left: 10px !important;
  padding-right: 10px !important;
  box-sizing: border-box !important;
}

/* Base button styling inside mock */
.tablet-mock-env .mn3-policy-button {
  display: inline-flex !important;
  align-items: center !important;
  justify-content: center !important;
  padding: 10px 12px !important;
  height: auto !important;
  min-height: 44px !important;
  border-radius: 20px !important;
  font-size: 14px !important;
  line-height: 1.2 !important;
  box-sizing: border-box !important;
  white-space: normal !important;
}

.tablet-mock-env .mn3-button-text {
  font-size: 14px !important;
  padding: 4px 6px !important;
  text-align: center !important;
  white-space: normal !important;
  overflow-wrap: anywhere !important;
  word-break: break-word !important;
}

/* Make mn3-content behave inside the tablet mock: static positioning and scroll if needed */
.tablet-mock-env .mn3-content,
.tablet-mock-env .mn3-allocation-content {
  position: static !important;
  max-height: calc(
    100vh - 120px
  ) !important; /* leave space for header and mock frame */
  overflow-y: auto !important;
  padding-bottom: 16px !important;
}

/* Ensure continue button stays visible and not overlapping */
.tablet-mock-env .mn3-continue-button {
  position: relative !important;
  z-index: 100005 !important;
  max-width: 90% !important;
}

/* MN1: constrain the continue button size inside the tablet mock so it doesn't dominate the viewport
   Scoped to .minigame-mn1-page to avoid affecting other pages */
.tablet-mock-env .minigame-mn1-page .mn3-continue-button {
  width: clamp(
    240px,
    58%,
    420px
  ) !important; /* prefer a centered medium width */
  max-width: 420px !important;
  min-width: 220px !important;
  height: clamp(44px, 6.5vw, 72px) !important;
  font-size: clamp(14px, 3.4vw, 20px) !important;
  border-radius: 36px !important;
  padding-left: 12px !important;
  padding-right: 12px !important;
  margin: 8px auto !important;
}

/* ---------------- MN1 SPECIFIC (authoritative rules) ---------------- */
/* Scope: only affects pages with class .minigame-mn1-page inside tablet mock */

/* Grid container: enforce column stacking of rows with equal vertical gap */
.tablet-mock-env .minigame-mn1-page .mn3-button-grid {
  display: block !important;
  row-gap: 14px !important; /* uniform vertical gap between rows */
  padding-left: 20px !important;
  padding-right: 20px !important;
  box-sizing: border-box !important;
  width: 100% !important;
  max-width: 720px !important;
  margin-left: auto !important;
  margin-right: auto !important;
}

/* Each row: use flex so buttons size to their content (variable widths), keep rows centered */
.tablet-mock-env .minigame-mn1-page .mn3-button-row {
  display: flex !important;
  gap: 12px !important; /* horizontal gap */
  width: 100% !important;
  box-sizing: border-box !important;
  justify-content: center !important;
  align-items: center !important;
  flex-wrap: nowrap !important; /* prevent accidental wrapping; markup controls count */
  padding: 0 !important;
  margin: 0 !important;
}

/* For safety, allow wrapping only when absolutely needed (very narrow mock) */
@media (max-width: 420px) {
  .tablet-mock-env .minigame-mn1-page .mn3-button-row {
    flex-wrap: wrap !important;
  }
}

/* Buttons should size to content but be constrained so they don't overflow the container */
.tablet-mock-env .minigame-mn1-page .mn3-button-row > .mn3-policy-button {
  flex: 0 1 auto !important; /* size to content, but can shrink */
  width: auto !important;
  max-width: calc(100% - 40px) !important; /* defensive cap */
  min-width: 90px !important; /* maintain tappable size */
  padding: 8px 12px !important;
  box-sizing: border-box !important;
}

/* Adjustments per row to keep visual balance without forcing equal widths */
/* Row 1 (2 items) - allow each to take up to 52% if content is long, but prefer content width */
.tablet-mock-env
  .minigame-mn1-page
  .mn3-button-row:nth-child(1)
  > .mn3-policy-button {
  max-width: 52% !important;
}
/* Row 2 (3 items) - allow up to ~33% each */
.tablet-mock-env
  .minigame-mn1-page
  .mn3-button-row:nth-child(2)
  > .mn3-policy-button {
  max-width: 33% !important;
}
/* Row 3 (2 items) - same as row 1 */
.tablet-mock-env
  .minigame-mn1-page
  .mn3-button-row:nth-child(3)
  > .mn3-policy-button {
  max-width: 52% !important;
}

/* Button text wrapping and padding */
.tablet-mock-env .minigame-mn1-page .mn3-policy-button .mn3-button-text {
  padding-left: 8px !important;
  padding-right: 8px !important;
  font-size: 14px !important;
  text-align: center !important;
  white-space: normal !important;
}

/* Keep the continue button centered and above the grid */
.tablet-mock-env .minigame-mn1-page .w-full.px-4.mt-4.flex.justify-center {
  display: flex !important;
  justify-content: center !important;
  width: 100% !important;
}

/* Ensure the button grid never causes horizontal scroll on the mock frame */
.tablet-mock-env .minigame-mn1-page .mn3-button-grid {
  overflow-x: hidden !important;
}

/* If some inline style forces grid, override to flex */
.tablet-mock-env .minigame-mn1-page .mn3-button-row[style] {
  display: flex !important;
}

/* Authoritative fixes: override inline width/height applied by components
   Ensure buttons size to content, do not overflow mock frame, and allow text-wrapping. */
.tablet-mock-env .minigame-mn1-page button.transition-all,
.tablet-mock-env .minigame-mn1-page .mn3-policy-button {
  width: auto !important; /* ignore inline percentage widths */
  box-sizing: border-box !important;
  display: inline-block !important;
  white-space: normal !important;
  padding-left: 10px !important;
  padding-right: 10px !important;
  overflow-wrap: anywhere !important;
  word-break: break-word !important;
  min-width: 0 !important; /* allow shrink */
}

/* Ensure the grid container keeps horizontal padding and prevents the mock frame from being pushed */
.tablet-mock-env .minigame-mn1-page .mn3-button-grid {
  padding-left: 20px !important;
  padding-right: 20px !important;
  box-sizing: border-box !important;
  overflow-x: hidden !important;
}

/* Per-row caps: allow variable widths but cap so total row width cannot exceed container */
.tablet-mock-env .minigame-mn1-page .mn3-button-row {
  display: flex !important;
  flex-wrap: wrap !important; /* allow wrapping if absolutely necessary */
  justify-content: center !important;
  gap: 12px !important;
}

.tablet-mock-env
  .minigame-mn1-page
  .mn3-button-row:nth-child(1)
  > .mn3-policy-button {
  max-width: calc((100% - 12px) / 2) !important; /* two columns cap */
}
.tablet-mock-env
  .minigame-mn1-page
  .mn3-button-row:nth-child(2)
  > .mn3-policy-button {
  max-width: calc((100% - 24px) / 3) !important; /* three columns cap */
}
.tablet-mock-env
  .minigame-mn1-page
  .mn3-button-row:nth-child(3)
  > .mn3-policy-button {
  max-width: calc((100% - 12px) / 2) !important;
}

/* Also enforce a global protective cap so very long labels cannot force overflow */
.tablet-mock-env .minigame-mn1-page .mn3-policy-button {
  max-width: 100% !important;
}

/* If any inline style sets width on the button element via style attribute, ensure CSS still wins */
.tablet-mock-env .minigame-mn1-page button[style] {
  width: auto !important;
  max-width: 100% !important;
}

/* Final fallback: if something still forces absolute positioning or transforms that push
   content out of the mock, reset those on the mn3-content area inside this page */
.tablet-mock-env .minigame-mn1-page .mn3-content,
.tablet-mock-env .minigame-mn1-page .mn3-button-grid {
  position: relative !important;
  transform: none !important;
}

/* DesktopMockup-only: ensure selected option visibly highlights inside the mock */
.tablet-mock-env .minigame-mn1-page .mn3-policy-button--selected {
  background-color: #ffe000 !important; /* bright yellow */
  color: #000 !important;
  box-shadow: none !important;
}
.tablet-mock-env .minigame-mn1-page .mn3-policy-button--selected .mn3-button-text {
  color: #000 !important;
}

/* Desktop mock specific override: only apply inside the iframe portal wrapper for MN1 */
.desktop-mock-embed .minigame-mn1-page .mn3-policy-button--selected {
  background-color: #000d59 !important; /* distinct desktop highlight */
  color: #ffffff !important;
  box-shadow: none !important;
}
.desktop-mock-embed .minigame-mn1-page .mn3-policy-button--selected .mn3-button-text {
  color: #ffffff !important;
}

/* Also enable same desktop highlight for MN3 page inside desktop mock */
.desktop-mock-embed .minigame-mn3-page .mn3-policy-button--selected {
  background-color: #000d59 !important;
  color: #ffffff !important;
  box-shadow: none !important;
}
.desktop-mock-embed .minigame-mn3-page .mn3-policy-button--selected .mn3-button-text {
  color: #ffffff !important;
}
