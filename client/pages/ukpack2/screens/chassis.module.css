/* Page-scoped layout for /ukpack2/chassis
   - Isolated CSS module to control horizontal spacing and grid layout
   - Mobile: 16px (1rem) -> px-4
   - Tablet (>=640px): 24px (1.5rem) -> px-6
   - Desktop (>=1024px): 32px (2rem) -> px-8
*/:root{
  --chassis-gap: 16px;
  --chassis-accent: #001a73;
}

/* Horizontal padding container used across header, main content, footer, modal */
.containerPadding {
  padding-left: 1rem;
  padding-right: 1rem;
  box-sizing: border-box;
}

@media (min-width: 768px) {
  .containerPadding {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

@media (min-width: 1024px) {
  .containerPadding {
    padding-left: 2rem;
    padding-right: 2rem;
  }
}

/* Main content grid: 1 column mobile, 2 columns from md */
.contentGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: var(--chassis-gap);
  width: 100%;
  box-sizing: border-box;
}

@media (min-width: 768px) {
  .contentGrid {
    grid-template-columns: 1fr 1fr;
  }
}

/* Left preview wrapper and inner preview (no forced horizontal padding here) */
.previewWrapper {
  width: 100%;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.previewInner {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  box-sizing: border-box;
  position: relative;
  min-height: 140px;
}

.shadowImg {
  position: absolute;
  left: 0;
  right: 0;
  margin: 0 auto;
  width: 100%;
  height: auto;
  max-width: 1200px;
  bottom: 8px;
  pointer-events: none;
}

.heroImg {
  display: block;
  width: 100%;
  height: auto;
  object-fit: contain;
  margin: 0 auto;
}

.starBadge {
  position: absolute;
  width: 20px;
  height: 20px;
  top: 6px;
  right: 6px;
  pointer-events: none;
}

.selectedLabel {
  margin-top: 12px;
  font-family: inherit;
  font-weight: 600;
  color: var(--chassis-accent);
  text-align: center;
  width: 100%;
  box-sizing: border-box;
}

/* Right controls wrapper */
.controlsWrapper {
  width: 100%;
  box-sizing: border-box;
  background: #ffffff;
  border-radius: 0;
  padding: 0 !important; /* ensure no extra padding from ancestors */
}

/* Semantic section grouping for tabs + frame + grid */
.controlsSection {
  width: 100%;
  box-sizing: border-box;
  padding: 0 !important; /* remove inherited padding */
  margin: 0 !important;
}


/* Controls box: frame around tabs + content. Tabs will visually sit above the top border */
.controlsBox {
  /* full-bleed like tabs - align to viewport using calc to avoid transformed ancestor issues */
  width: 100vw !important;
  margin-left: calc(50% - 50vw) !important;
  margin-right: calc(50% - 50vw) !important;
  padding-left: 0 !important;
  padding-right: 0 !important;
  border: 2px solid #000D59; /* restored fixed border width */
  border-color: #000D59;
  border-radius: 8px;
  background: #ffffff;
  overflow: visible;
  box-sizing: border-box;
  position: relative;
  z-index: 0; /* default stacking for frame */
  padding: 2px 0 12px 0; /* small top padding to separate tabs */
  min-height: 128px; /* ensure a minimum visible area for controls */
  transition: border-color 150ms ease, border-width 150ms ease;
}

@media (max-width: 639px) {
  .controlsBox { min-height: 110px; }
}

@media (min-width: 1024px) {
  .controlsBox { min-height: 160px; }
}

/* Move tabs up to overlap the top border so the border appears under the tabs */
.tabsWrapper {
  /* make tabs truly full-bleed irrespective of parent centering - align to viewport with calc */
  position: relative;
  z-index: 9999; /* ensure tabs sit above the frame */
  width: 100vw !important;
  margin-left: calc(50% - 50vw) !important;
  margin-right: calc(50% - 50vw) !important;
  margin: 0 0 -16px 0 !important; /* overlap so tabs sit on top of border */
  padding: 0 !important;
  left: 0 !important;
  transform: none !important;
  box-sizing: border-box !important;
  overflow: visible !important;
}

/* ensure inner tab items stretch to fill full-bleed container and small gap between tabs */
.tabsWrapper > .flex { width: 100%; gap: 1px !important; }

/* increase tab inner height to scale with width increase */
.tabInner {
  height: 36px; /* mobile: increased */
}

@media (min-width: 768px) {
  .tabInner { height: 45px; } /* desktop: increased */
}

/* per-tab horizontal padding to increase width by ~4px (2px each side) */
.tabItem {
  padding-left: 2px;
  padding-right: 2px;
  box-sizing: border-box;
  border: 0.1px solid var(--chassis-accent);
  border-color: transparent; /* visually hide tab borders while preserving layout */
}

.controlsContent {
  padding: 12px;
  box-sizing: border-box;
}

/* Provide inner horizontal padding for stacked controls so inputs sit inside the frame */
.controlsContent .space-y-2 {
  /* Equal padding on all sides */
  padding: 12px;
  box-sizing: border-box;
}

/* Reduce visual height of number inputs inside controls to match design request */
.controlsContent input[type="number"] {
  padding-top: 6px !important;
  padding-bottom: 6px !important;
  padding-left: 10px !important;
  padding-right: 10px !important;
  height: auto !important;
  line-height: 1 !important;
  font-size: 15px !important;
  box-sizing: border-box;
}

/* Keep rounded-full look but ensure the internal padding keeps elements compact */
.controlsContent input[type="number"].rounded-full {
  border-radius: 9999px;
}

.selectionGrid {
  --icon-cell-height: 140px; /* mobile default icon height (increased) */
  display: grid;
  grid-template-columns: repeat(2, 1fr); /* fill available width */
  gap: 6px; /* tighter gap for compact layout */
  width: 100%;
  box-sizing: border-box;
  padding: 0.1px; /* fill up to the border */
  justify-content: center; /* center the whole group */
  justify-items: stretch; /* let buttons fill horizontally */
  align-items: start; /* align cells to start so height control comes from icon container */
}

@media (min-width: 768px) {
  .selectionGrid {
    --icon-cell-height: 200px; /* larger icon height on wider screens (increased) */
    grid-template-columns: repeat(4, 1fr); /* 4 columns on md+ */
    gap: 6px; /* tighter gap on larger screens */
    padding: 0.1px; /* ensure grid stretches to border */
    justify-content: center;
  }
}

/* ensure buttons inside grid layout vertically and center content */
.selectionGrid > button {
  display: flex !important;
  flex-direction: column !important;
  align-items: center !important;
  justify-content: flex-start !important;
  width: 100%;
  height: auto;
  padding: 4px !important; /* reduced inner spacing for compact layout */
  border-color: transparent !important; /* hide grid item borders visually */
  background: transparent;
}

/* Icon container: fixed uniform height, width flexible (fills column) */
.selectionGrid > button > div.iconContainer {
  height: var(--icon-cell-height) !important;
  width: 100% !important;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 !important; /* no extra padding so images use full height */
}

/* Images/SVGs: fixed to icon container height, width scales automatically */
.selectionGrid > button img,
.selectionGrid > button svg,
.selectionGrid img,
.selectionGrid svg {
  height: 100% !important;
  max-height: none !important;
  width: auto !important;
  object-fit: contain !important;
  display: block !important;
  max-width: 100%;
}

/* allow labels below icon to take natural space; grid rows will size accordingly */
.selectionGrid > button .selection-label-mobile,
.selectionGrid > button .selection-label-mobile + * {
  margin-top: 8px;
}

/* ensure grid stretches and rows are uniform where possible */
.selectionGrid {
  align-content: stretch;
}

.selectionGrid > button > div.iconContainer {
  min-height: 0; /* allow flex children to shrink properly */
}


/* Horizontal inline card layout (matches example) */
.selectionGrid > button.horizontal {
  flex-direction: row !important;
  align-items: center !important;
  justify-content: flex-start !important;
  gap: 12px !important;
  padding: 8px 12px !important;
}

/* Inline icon sizing: smaller uniform height for inline cards */
.selectionGrid > button.horizontal > div.iconContainer {
  height: 56px !important; /* mobile inline icon height */
  width: auto !important;
  flex-shrink: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

@media (min-width: 768px) {
  .selectionGrid > button.horizontal > div.iconContainer {
    height: 72px !important; /* larger inline height on md+ */
  }
}

/* Ensure images inside horizontal cards respect the container height */
.selectionGrid > button.horizontal img,
.selectionGrid > button.horizontal svg {
  height: 100% !important;
  width: auto !important;
}

/* Selected state: neutral (no yellow frame) */
.selectionGrid > button.selected {
  border: none !important;
  background: transparent !important;
  box-shadow: none !important;
}

/* Fixed footer that uses same horizontal padding as content */
.fixedFooter {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0; /* will be positioned by CustomizationScreen outer offset as needed */
  z-index: 60;
}

/* Modal content should respect same horizontal padding when centered */
.modalContent {
  width: 100%;
  max-width: 640px;
  box-sizing: border-box;
}

/* Small helpers */
.center { display:flex; align-items:center; justify-content:center; }
.hidden { display:none; }

/* Prevent content overflow in controls and preview areas */
.controlsBox, .controlsContent {
  max-width: 100%;
  box-sizing: border-box;
  overflow: auto; /* allow internal scrolling if content too tall */
}

/* Make sure preview images never overflow their container */
.previewInner, .previewInner img, .previewInner svg {
  max-width: 100%;
  box-sizing: border-box;
}

/* Ensure any immediate child panel inside controlsWrapper respects width */
.controlsWrapper > * {
  width: 100%;
  box-sizing: border-box;
}

/* Support pages that didn't use controlsSection wrapper: make their white panels full-bleed */
.bg-white.rounded-t-3xl,
.bg-white.rounded-2xl,
.bg-white.rounded-2xl.-mt-2 {
  width: 100vw !important;
  margin-left: calc(50% - 50vw) !important;
  margin-right: calc(50% - 50vw) !important;
  box-sizing: border-box;
  overflow: visible;
  border: 2px solid var(--chassis-accent); /* show border like controlsBox */
  border-radius: 8px;
  background: #ffffff;
  position: relative;
}

/* Make StepTabs inside those panels full-bleed like .tabsWrapper */
.bg-white.rounded-t-3xl > .flex.w-full,
.bg-white.rounded-2xl > .flex.w-full,
.bg-white.rounded-2xl.-mt-2 > .flex.w-full {
  position: relative;
  z-index: 10;
  width: 100vw !important;
  margin-left: calc(50% - 50vw) !important;
  margin-right: calc(50% - 50vw) !important;
  margin: 0 0 -16px 0; /* overlap so tabs sit on top of border */
  padding: 0;
}

/* Ensure the inner content of those panels uses the controlsContent spacing */
.bg-white.rounded-t-3xl .space-y-2,
.bg-white.rounded-2xl .space-y-2 {
  padding: 8px 8px 12px 8px; /* small padding to match controlsContent */
  box-sizing: border-box;
}

/* Reduce panel horizontal padding on very small screens to avoid horizontal scroll */
@media (max-width: 420px) {
  .bg-white.rounded-t-3xl,
  .bg-white.rounded-2xl,
  .bg-white.rounded-2xl.-mt-2 {
    padding-left: 6px !important;
    padding-right: 6px !important;
  }
}
