/* Page-scoped layout for /ukpack2/chassis
   - Isolated CSS module to control horizontal spacing and grid layout
   - Mobile: 16px (1rem) -> px-4
   - Tablet (>=640px): 24px (1.5rem) -> px-6
   - Desktop (>=1024px): 32px (2rem) -> px-8
*/
:root{
  --chassis-gap: 16px;
  --chassis-accent: #001a73;
}

/* Horizontal padding container used across header, main content, footer, modal */
.containerPadding {
  padding-left: 1rem;
  padding-right: 1rem;
  box-sizing: border-box;
}

@media (min-width: 768px) {
  .containerPadding {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

@media (min-width: 1024px) {
  .containerPadding {
    padding-left: 2rem;
    padding-right: 2rem;
  }
}

/* Main content grid: 1 column mobile, 2 columns from md */
.contentGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: var(--chassis-gap);
  width: 100%;
  box-sizing: border-box;
}

@media (min-width: 768px) {
  .contentGrid {
    grid-template-columns: 1fr 1fr;
  }
}

/* Left preview wrapper and inner preview (no forced horizontal padding here) */
.previewWrapper {
  width: 100%;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.previewInner {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  box-sizing: border-box;
  position: relative;
  min-height: 140px;
}

.shadowImg {
  position: absolute;
  left: 0;
  right: 0;
  margin: 0 auto;
  width: 100%;
  height: auto;
  max-width: 1200px;
  bottom: 8px;
  pointer-events: none;
}

.heroImg {
  display: block;
  width: 100%;
  height: auto;
  object-fit: contain;
  margin: 0 auto;
}

.starBadge {
  position: absolute;
  width: 20px;
  height: 20px;
  top: 6px;
  right: 6px;
  pointer-events: none;
}

.selectedLabel {
  margin-top: 12px;
  font-family: inherit;
  font-weight: 600;
  color: var(--chassis-accent);
  text-align: center;
  width: 100%;
  box-sizing: border-box;
}

/* Right controls wrapper */
.controlsWrapper {
  width: 100%;
  box-sizing: border-box;
  background: #ffffff;
  border-radius: 0;
}

/* Semantic section grouping for tabs + frame + grid */
.controlsSection {
  width: 100%;
  box-sizing: border-box;
}


/* Controls box: frame around tabs + content. Tabs will visually sit above the top border */
.controlsBox {
  /* full-bleed like tabs */
  width: 100vw;
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
  border: 2px solid #000D59; /* restored fixed border width */
  border-radius: 8px;
  background: #ffffff;
  overflow: visible;
  box-sizing: border-box;
  position: relative;
  z-index: 0; /* default stacking for frame */
  padding: 2px 0 12px 0; /* small top padding to separate tabs */
  min-height: 128px; /* ensure a minimum visible area for controls */
  transition: border-color 150ms ease, border-width 150ms ease;
}

@media (max-width: 639px) {
  .controlsBox { min-height: 110px; }
}

@media (min-width: 1024px) {
  .controlsBox { min-height: 160px; }
}

/* Move tabs up to overlap the top border so the border appears under the tabs */
.tabsWrapper {
  /* make tabs truly full-bleed irrespective of parent centering */
  position: relative;
  z-index: 10; /* ensure tabs sit above the frame */
  width: 100vw;
  margin-left: calc(50% - 50vw); /* shift to viewport left edge */
  margin-right: calc(50% - 50vw);
  margin: 0 0 -16px 0; /* overlap so tabs sit on top of border */
  padding: 0;
}

/* ensure inner tab items stretch to fill full-bleed container and small gap between tabs */
.tabsWrapper > .flex { width: 100%; gap: 1px !important; }

/* increase tab inner height to scale with width increase */
.tabInner {
  height: 36px; /* mobile: increased */
}

@media (min-width: 768px) {
  .tabInner { height: 45px; } /* desktop: increased */
}

/* per-tab horizontal padding to increase width by ~4px (2px each side) */
.tabItem {
  padding-left: 2px;
  padding-right: 2px;
  box-sizing: border-box;
  border: 0.1px solid var(--chassis-accent);
}

.controlsContent {
  padding: 0;
  box-sizing: border-box;
}

.selectionGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr); /* fill available width */
  gap: 3px; /* 3px gap between icons as requested */
  width: 100%;
  box-sizing: border-box;
  padding: 0.1px; /* fill up to the border */
  justify-content: center; /* center the whole group */
  justify-items: stretch; /* let buttons fill horizontally */
  align-items: stretch; /* stretch vertically */
  grid-auto-rows: 120px; /* fixed row height to equalize icons */
}

@media (min-width: 768px) {
  .selectionGrid {
    grid-template-columns: repeat(4, 1fr); /* 4 columns on md+ */
    gap: 3px; /* 3px gap between icons on wider screens */
    padding: 0.1px; /* ensure grid stretches to border */
    justify-content: center;
    grid-auto-rows: 160px; /* taller rows on larger screens */
  }
}

/* ensure buttons inside grid fill the cell */
.selectionGrid > button {
  width: 100%;
  height: 100%;
  padding: 0 !important;
}

/* make the first child (icon container) stretch */
.selectionGrid > button > div:first-child {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 !important;
}

/* force any image or SVG inside the grid to scale to full cell height */
.selectionGrid > button img,
.selectionGrid > button svg,
.selectionGrid img,
.selectionGrid svg {
  height: 100% !important;
  max-height: none !important;
  width: auto !important;
  object-fit: contain !important;
  display: block !important;
}

/* ensure grid stretches and rows are uniform */
.selectionGrid {
  align-content: stretch;
  align-items: stretch;
}

.selectionGrid > button > div:first-child {
  min-height: 0; /* allow flex children to shrink properly */
}


/* Fixed footer that uses same horizontal padding as content */
.fixedFooter {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0; /* will be positioned by CustomizationScreen outer offset as needed */
  z-index: 60;
}

/* Modal content should respect same horizontal padding when centered */
.modalContent {
  width: 100%;
  max-width: 640px;
  box-sizing: border-box;
}

/* Small helpers */
.center { display:flex; align-items:center; justify-content:center; }
.hidden { display:none; }
