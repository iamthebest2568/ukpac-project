rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Restrict writes to events collections from unauthenticated clients.
    // Preferred pattern: server-side writes using Admin SDK.

    // Allow read for dashboards/analytics to authenticated users (adjust as needed)
    match /{document=**} {
      allow read: if request.auth != null;
    }

    // Example: prevent public clients from writing arbitrary event documents
    match /minigame1_events/{docId}/events/{eventId} {
      // Only server (admin) should write; deny all client writes
      allow write: if false;
      allow read: if request.auth != null;
    }

    match /minigame2_events/{docId}/events/{eventId} {
      allow write: if false;
      allow read: if request.auth != null;
    }

    // Allow clients to add lightweight design image references if they are
    // authenticated and the document contains only imageUrl and createdAt.
    match /beforecitychange-imageshow-events/{doc} {
      allow create: if request.auth != null &&
        request.resource.data.keys().hasOnly(['imageUrl','createdAt']) &&
        request.resource.data.imageUrl is string;
      // deny updates/deletes from clients
      allow update, delete: if false;
      allow read: if request.auth != null;
    }

    match /kpact-gamebus-imagedesign-events/{doc} {
      allow create: if request.auth != null &&
        request.resource.data.keys().hasOnly(['imageUrl','createdAt']) &&
        request.resource.data.imageUrl is string;
      // deny updates/deletes from clients
      allow update, delete: if false;
      allow read: if request.auth != null;
    }
  }
}
